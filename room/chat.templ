package room

import "fmt"
import "time"

templ chatLayout() {
<div id="chat"
    class="p-4 col-span-3 w-full h-full max-h-[96vh] flex flex-col justify-between border border-black rounded-md">
    { children... }
</div>
}

templ chatPersonHeader(userName string) {
<div class="flex items-center">
    <img src={ fmt.Sprintf("https://api.dicebear.com/7.x/adventurer/svg?seed=%s", userName) }
        class="w-12 h-12 rounded-full" alt="user" />
    <span class="ml-4 font-bold">{ userName }</span>
</div>
}

templ myMessage(message string) {
<div class="rounded-t-lg rounded-l-lg items-center px-4 py-2 w-fit max-w-[80%] bg-teal-500 dark:bg-teal-700 self-end">
    <p class="text-white">{ message }</p>
    <time class="text-xs text-gray-500 dark:text-gray-400">{ time.Now().Format("22:00") }</time>
</div>
}

templ receivedMessage(message string) {
<div
    class="rounded-t-lg rounded-r-lg items-center px-4 py-2 w-fit max-w-[80%] bg-purple-500 dark:bg-purple-700 self-start">
    <p class="text-white">{ message }</p>
    <time class="text-xs text-gray-500 dark:text-gray-400">{ time.Now().Format("22:00") }</time>
</div>
}

templ chatBubble(isMine bool, message string) {
<div id="messages" hx-swap-oob="beforeend">
    if !isMine {
    @receivedMessage(message)
    } else {
    @myMessage(message)
    }
</div>
}

templ Chat(userID string, userName string, room *chatRoom) {
@chatLayout() {
@chatPersonHeader(userName)
<template id="myMessageTemplate">
    @myMessage("Template poruka")
</template>
<div id="messages" class="p-2 w-full grow bg-blue-200 overflow-y-auto flex flex-col space-y-2">
    for _, message := range room.Messages {
    if message.SenderId != userID {
    @myMessage(message.Message)
    } else {
    @receivedMessage(message.Message)
    }
    }
</div>
<form id="chatForm" ws-send>
    <input type="hidden" name="roomId" required value={ room.ID } />
    <input type="text" name="message" required class="w-full p-1 h-12 border border-black rounded-md"
        placeholder="Unesite sljedeÄ‡u poruku" />
    <!-- <button type="submit">Send</button> -->
    <script>
        /**
         *  @typedef {Object} MessageDetail
         *  @property {string} roomId
         *  @property {string} message
         *  @param {MessageDetail} messageDetail
        */
        function addMyMessage(messageDetail) {
            console.log("Message for room", messageDetail.roomId, messageDetail.message)
            const template = document.querySelector("#myMessageTemplate")
            const clone = document.importNode(template.content, true)

            clone.querySelector("p").innerText = messageDetail.message
            const messagesDiv = document.querySelector("#messages")
            messagesDiv.appendChild(clone)
            scrollDown()
        }
        function scrollDown() {
            const messagesDiv = document.querySelector("#messages")
            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        }
        htmx.on("htmx:wsAfterSend", function (e) {
            e.srcElement.querySelector("input[name='message']").value = ""

            addMyMessage(JSON.parse(e.detail.message))
        })
        htmx.on("htmx:wsAfterMessage", scrollDown)
        // Scroll to bottom on loading the chat
        scrollDown()
    </script>
</form>
}
}

templ EmptyChat() {
@chatLayout() {
<span>Odaberite sobu</span>
}
}
